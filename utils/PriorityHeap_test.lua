local Heap = require("utils.PriorityHeap")

describe("Heap", function()
  it("should be able to push to heap and retain min priority", function()
    local h = Heap()
    h:push("B",h.priority.char_value)
    h:push("G",h.priority.char_value)
    h:push("J",h.priority.char_value)
    h:push("A",h.priority.char_value)
    assert.are.same("A", h:top().value)
  end)
  it("should be able to push and pop and retain min priority", function()
    local h = Heap()
    h:push("C",h.priority.char_value)
    h:push("D",h.priority.char_value)
    h:push("B",h.priority.char_value)
    h:push("A",h.priority.char_value)
    assert.are.same("A", h:pop().value)
    assert.are.same("B", h:pop().value)
    assert.are.same("C", h:pop().value)
    assert.are.same("D", h:pop().value)
  end)
end)
