local Stack = require "utils.Stack"
describe("Stack",function ()
  it("should push to stack",function ()
    local stack = Stack()
    stack:push(1)
    assert.are.equal(1,stack:top())
    stack:push(42)
    assert.are.equal(42,stack:top())
  end)
  it("should be able to pop from stack",function ()
    local stack = Stack()
    stack:push(1)
    stack:push(42)
    assert.are.equal(42,stack:pop())
    assert.are.equal(1,stack:pop())
  end)
  it("should be able to create multiple instances",function ()
    local s1 = Stack()
    s1:push(2)
    local s2 = Stack()
    s2:push(42)
    assert.are.equal(2,s1:top())
    assert.are.equal(42,s2:top())
  end)
  it("should return size of stack",function ()
    local stack = Stack()
    assert.are.equal(0, stack:size())
    stack:push(1)
    stack:push(1)
    stack:push(1)
    stack:push(1)
    assert.are.equal(4, stack:size())
  end)
  it("should return nil when popping empty stack",function ()
    local stack = Stack()
    print()
    assert.are.equal(nil, stack:pop())
  end)
end)
